version: "3.6"
services:
  viky-nlp-dev:
    image: webapp_viky-nlp-dev:${NLP_TAG:-latest}
    build:
      context: ../nlp/
      target: run_image
    ports:
      - "9345:9345"
    tty: true
    environment:
      VIKYAPP_INTERNAL_URL: ${VIKYAPP_INTERNAL_URL}
      VIKYAPP_REDIS_PACKAGE_NOTIFIER: "redis://viky-redis-dev:6379/3"
      VIKYAPP_NLP_PARALLEL_LOAD: 4
    networks:
      - kerbnet
    depends_on:
      - viky-redis-dev
      - viky-db-dev
  viky-db-dev:
    image: "postgres:11.5-alpine"
    ports:
      - "5432:5432"
    tty: true
    environment:
      POSTGRES_USER: "viky"
      POSTGRES_PASSWORD: "viky"
    volumes:
      - vikyapp_db01_dev:/var/lib/postgresql/data
    networks:
      - kerbnet
  viky-redis-dev:
    image: "redis:5.0-alpine"
    ports:
      - "6379:6379"
    tty: true
    networks:
      - kerbnet
  viky-stats01-dev:
    image: "vikyai/elasticsearch-s3:7.4.1"
    ports:
      - "9200:9200"
    tty: true
    environment:
      path.repo: /backup_data
      discovery.type: single-node
      node.name: viky-stats01-dev
      network.host: "0.0.0.0"
      ES_JAVA_OPTS: -Xms128m -Xmx392m
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-no_access}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-no_secret}
    command: |
      bash -c "echo ${S3_ACCESS_KEY} | bin/elasticsearch-keystore add -f --stdin s3.client.default.access_key &&
               echo ${S3_SECRET_KEY} | bin/elasticsearch-keystore add -f --stdin s3.client.default.secret_key &&
        /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - ./backups:/backup_data
      - vikyapp_stats01_dev:/usr/share/elasticsearch/data
    networks:
      - kerbnet
  viky-kibana-dev:
    image: "docker.elastic.co/kibana/kibana:7.3.2"
    ports:
      - "5601:5601"
    tty: true
    environment:
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
      ELASTICSEARCH_HOSTS: "http://viky-stats01-dev:9200"
    networks:
      - kerbnet
    depends_on:
      - viky-stats01-dev

volumes:
  vikyapp_db01_dev: {}
  vikyapp_stats01_dev: {}

networks:
  kerbnet: {}
